services:
  backend:
    build:
      args:
        - REACT_APP_USERNAME=${REACT_APP_USERNAME}
        - REACT_APP_PASSWORD=${REACT_APP_PASSWORD}
      context: backend
      target: development
    command: npm run start
    restart: unless-stopped
    environment:
      - DATABASE_DB=example
      - DATABASE_USER=root
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - NODE_ENV=development
      - REACT_APP_USERNAME=${REACT_APP_USERNAME}
      - REACT_APP_PASSWORD=${REACT_APP_PASSWORD}
    ports:
      - 80:80
    volumes:
      - ./backend/src:/code/src:ro
      - ./backend/package.json:/code/package.json
      - ./backend/package-lock.json:/code/package-lock.json
      - back-notused:/opt/app/node_modules
    networks:
      - public
      - private
    depends_on:
      db:
        condition: service_healthy
        restart: true
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:latest
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: "--default-authentication-plugin=mysql_native_password"
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - private
    environment:
      - MYSQL_DATABASE=example
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 3
  frontend:
    build:
      context: frontend
      args:
        REACT_APP_CLIENTID: ${REACT_APP_CLIENTID}
    command: npx serve -s build
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
    networks:
      - public
    depends_on:
      - backend
    environment:
      - REACT_APP_CLIENTID=${REACT_APP_CLIENTID}
networks:
  public:
  private:
volumes:
  back-notused:
  db-data:
